stages:
  - preparation
  - testing
  - deploy

image: thecodingmachine/php:8.1-v4-cli

# Variables
variables:
  PHP_EXTENSIONS: pdo_sqlite posix gd

cache:
  key: "$CI_JOB_NAME-$CI_COMMIT_REF_SLUG"

composer:
  stage: preparation
  script:
    - php -v
    - composer install --prefer-dist --no-ansi --no-interaction --no-progress --no-scripts
    - cp .env.example .env
    - php artisan key:generate
    - php artisan storage:link
  artifacts:
    paths:
      - vendor/
      - .env
    expire_in: 1 days
    when: always
  cache:
    paths:
      - vendor/

phpunit:
  stage: testing
  dependencies:
    - composer
  script:
    - php artisan storage:link
    - php artisan test --parallel
  artifacts:
    paths:
      - ./storage/app
      - ./storage/logs
    expire_in: 1 days
    when: on_failure

codestyle:
  stage: testing
  script:
    - ./vendor/bin/pint --test
  dependencies:
    - composer

security-checker:
  stage: testing
  needs:
    - job: composer
      artifacts: true
  script:
    - composer audit

deploy_dev:
  stage: deploy
  needs:
    - job: composer
      artifacts: true
  script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ./vendor/bin/envoy run deploy -vvv
  only:
    - dev

deploy_prod:
  stage: deploy
  needs:
    - job: composer
      artifacts: true
  script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
    - ./vendor/bin/envoy run deploy --server=prod
  only:
    - master
  when: manual

merge-master-to-mirrored:
  stage: deploy
  only:
    - master
  script:
    - git clone --single-branch --branch=mirrored $OAUTH2_REPO_URL
    - cd manuscript
    - git config remote.origin.fetch "+refs/heads/master:refs/remotes/origin/master"
    - git fetch origin
    - git config --global user.email "silvano.alda@sib.swiss"
    - git config --global user.name "Pipeline"
    - MESSAGE=$(git log -n 1 origin/master)
    - git merge origin/master -m "${MESSAGE}"
    - git push origin mirrored
