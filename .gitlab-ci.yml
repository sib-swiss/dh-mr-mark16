before_script:
  - apt-get update -qq
  - apt-get install -qq git
  # Setup SSH deploy keys
  - "which ssh-agent || ( apt-get install -qq openssh-client )"
  - eval $(ssh-agent -s)
  - mkdir -p ~/.ssh
  - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

deploy_dev:
  type: deploy
  environment:
    name: dev
    url: $DEV_HOSTNAME
  script:
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - ssh $DEV_USERNAME@$DEV_HOSTNAME "cd $DEV_PATH && git checkout dev && git pull origin dev && cd htdocs && composer install && exit"
    - curl '$DEV_URL/admin/cache/clear' -H 'Authorization: Basic $BASE64_ADMIN_AUTH' 
  only:
    - dev

deploy_prod:
  type: deploy
  environment:
    name: prod
    url: $PROD_HOSTNAME
  script:
    - ssh-add <(echo "$PROD_SSH_PRIVATE_KEY")
    - ssh $PROD_USERNAME@$PROD_HOSTNAME "cd $PROD_PATH && git checkout master && git pull origin master && cd htdocs && composer install && exit"
    - curl '$PROD_URL/admin/cache/clear' -H 'Authorization: Basic $BASE64_ADMIN_AUTH' 
  only:
    - master
  when: manual

merge-master-to-mirrored:
  only:
    - master
  script:
    - git clone --single-branch --branch=mirrored $OAUTH2_REPO_URL
    - cd manuscript
    - git config remote.origin.fetch "+refs/heads/master:refs/remotes/origin/master"
    - git fetch origin
    - git config --global user.email "silvano.alda@sib.swiss"
    - git config --global user.name "Pipeline"
    - MESSAGE=$(git log -n 1 origin/master)
    - git merge origin/master -m "${MESSAGE}"
    - git push origin mirrored
